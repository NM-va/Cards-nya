{"version":3,"sources":["n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/auth-reducer.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/app-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","auth","state","action","type","profile","app","store","createStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"qOAaeA,EAVH,WACV,OACE,qBAAKC,UAAU,MAAf,SACE,gCCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCTRQ,EAAoB,GCApBA,EAAoB,GCApBA,EAAoB,GCKpBC,EAAcC,YAAgB,CAChCC,KHJuB,WAAiD,IAAhDC,EAA+C,uDAAnCJ,EAAcK,EAAqB,uCAI/D,OAHAA,EAAOC,KAGAF,GGCfG,QFL0B,WAAiD,IAAhDH,EAA+C,uDAAnCJ,EAAcK,EAAqB,uCAIlE,OAHAA,EAAOC,KAGAF,GEEfI,IDNsB,WAAiD,IAAhDJ,EAA+C,uDAAnCJ,EAAcK,EAAqB,uCAI9D,OAHAA,EAAOC,KAGAF,KCKNK,EAAQC,YAAYT,GCFjCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAYC,SAAU,YAAtB,SACI,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZM,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.f8e9ec60.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        {/*<Main/>*/}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState: any = {};\r\n\r\nexport const authReducer = (state:any = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState: any = {};\r\n\r\nexport const profileReducer = (state:any = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState: any = {};\r\n\r\nexport const appReducer = (state:any = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers, createStore} from 'redux'\r\nimport { authReducer } from './auth-reducer';\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport './index.css';\nimport App from './n1-main/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./n1-main/m2-bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter basename={'Cards-nya'}>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}